
#
# This file is automatically generated with 
# the System Biology Format Converter (http://sbfc.sourceforge.net/)
# from an SBML file.
#

#
# Model name = Restif2006 - Whooping cough
#
# is http://identifiers.org/biomodels.db/MODEL1003290000
# is http://identifiers.org/biomodels.db/BIOMD0000000249
# isDescribedBy http://identifiers.org/pubmed/16615206
# isDerivedFrom http://identifiers.org/pubmed/460412
# isDerivedFrom http://identifiers.org/pubmed/460424
#

# some function definitions that are allowed in SBML but not valid in xpp
ceil(x)=flr(1+x)

@delay=50


# Compartment: id = env, name = environment, constant
par env=1.0

# Parameter:   id =  mu, name = mu, defined by a Rule

# Parameter:   id =  l_e, name = life expectancy, constant
par l_e=50.0

# Parameter:   id =  beta_1, name = beta_1, defined by a Rule

# Parameter:   id =  R0_1, name = R0_1, constant
par R0_1=17.0

# Parameter:   id =  gamma_1, name = gamma_1, defined by a Rule

# Parameter:   id =  beta_2, name = beta_2, defined by a Rule

# Parameter:   id =  R0_2, name = R0_2, constant
par R0_2=17.0

# Parameter:   id =  gamma_2, name = gamma_2, defined by a Rule

# Parameter:   id =  tInf_1, name = infectious period 1, constant
par tInf_1=21.0

# Parameter:   id =  tInf_2, name = infectious period 2, constant
par tInf_2=21.0

# Parameter:   id =  sigma, name = sigma, defined by a Rule

# Parameter:   id =  tImm, name = immune period, constant
par tImm=20.0

# Parameter:   id =  Lambda_1, name = Lambda_1, defined by a Rule

# Parameter:   id =  Lambda_2, name = Lambda_2, defined by a Rule

# Parameter:   id =  I_1_frac, name = I_1_frac, defined by a Rule

# Parameter:   id =  I_2_frac, name = I_2_frac, defined by a Rule

# Parameter:   id =  S_frac, name = S_frac, defined by a Rule

# Parameter:   id =  R1_frac, name = R1_frac, defined by a Rule

# Parameter:   id =  R2_frac, name = R2_frac, defined by a Rule

# Parameter:   id =  Rp_frac, name = Rp_frac, defined by a Rule

# Parameter:   id =  psi, name = psi, constant
par psi=0.2

# assignmentRule: variable = mu
mu=1/l_e
aux mu=mu

# assignmentRule: variable = beta_1
beta_1=R0_1*gamma_1
aux beta_1=beta_1

# assignmentRule: variable = gamma_1
gamma_1=365/tInf_1
aux gamma_1=gamma_1

# assignmentRule: variable = beta_2
beta_2=R0_2*gamma_2
aux beta_2=beta_2

# assignmentRule: variable = gamma_2
gamma_2=365/tInf_2
aux gamma_2=gamma_2

# assignmentRule: variable = sigma
sigma=1/tImm
aux sigma=sigma

# assignmentRule: variable = Lambda_1
Lambda_1=beta_1*(I_1+I_1p)/N
aux Lambda_1=Lambda_1

# assignmentRule: variable = Lambda_2
Lambda_2=beta_2*(I_2+I_2p)/N
aux Lambda_2=Lambda_2

# assignmentRule: variable = I_1_frac
I_1_frac=(I_1+I_1p)/N
aux I_1_frac=I_1_frac

# assignmentRule: variable = I_2_frac
I_2_frac=(I_2+I_2p)/N
aux I_2_frac=I_2_frac

# assignmentRule: variable = S_frac
S_frac=S/N
aux S_frac=S_frac

# assignmentRule: variable = R1_frac
R1_frac=(R_1+R_p)/N
aux R1_frac=R1_frac

# assignmentRule: variable = R2_frac
R2_frac=(R_2+R_p)/N
aux R2_frac=R2_frac

# assignmentRule: variable = Rp_frac
Rp_frac=R_p/N
aux Rp_frac=Rp_frac

# Reaction: id = r1, name = Birth

r1=mu*N

# Reaction: id = r2, name = Death in S

r2=mu*S

# Reaction: id = r3, name = Death in I_1

r3=mu*I_1

# Reaction: id = r4, name = Death in I_2

r4=mu*I_2

# Reaction: id = r5, name = Death in R_1

r5=mu*R_1

# Reaction: id = r6, name = Death in R_2

r6=mu*R_2

# Reaction: id = r7, name = Death in I_1p

r7=mu*I_1p

# Reaction: id = r8, name = Death in I_2p

r8=mu*I_2p

# Reaction: id = r9, name = Death in R_p

r9=mu*R_p

# Reaction: id = r10, name = Primary Infection with strain 1

r10=beta_1*(I_1+I_1p)/N*S

# Reaction: id = r11, name = Primary Infection with strain 2

r11=beta_2*(I_2+I_2p)/N*S

# Reaction: id = r12, name = Secondary Infection with strain 1

r12=(1-psi)*beta_1*(I_1+I_1p)/N*R_2

# Reaction: id = r13, name = Secondary Infection with strain 2

r13=(1-psi)*beta_2*(I_2+I_2p)/N*R_1

# Reaction: id = r14, name = Recovery (I_1)

r14=gamma_1*I_1

# Reaction: id = r15, name = Recovery (I_2)

r15=gamma_2*I_2

# Reaction: id = r16, name = Recovery (I_1p)

r16=gamma_1*I_1p

# Reaction: id = r17, name = Recovery (I_2p)

r17=gamma_2*I_2p

# Reaction: id = r18, name = Loss of Immunity (R_1)

r18=sigma*R_1

# Reaction: id = r19, name = Loss of Immunity (R_2)

r19=sigma*R_2

# Reaction: id = r20, name = Loss of Immunity (R_p)

r20=sigma*R_p

# Species:   id = N, name = N
# Warning species is not changed by either rules or reactions

par N=1.0
aux N=N

# Species:   id = S, name = S, affected by kineticLaw

init S=0.0588912
dS/dt=( 1.0 * r1) + (-1.0 * r2) + (-1.0 * r10) + (-1.0 * r11) + ( 1.0 * r18) + ( 1.0 * r19) + ( 1.0 * r20)

# Species:   id = I_1, name = I_1, affected by kineticLaw

init I_1=0.003775
dI_1/dt=(-1.0 * r3) + ( 1.0 * r10) + (-1.0 * r14)

# Species:   id = I_2, name = I_2, affected by kineticLaw

init I_2=1.0E-6
dI_2/dt=(-1.0 * r4) + ( 1.0 * r11) + (-1.0 * r15)

# Species:   id = R_1, name = R_1, affected by kineticLaw

init R_1=0.93733
dR_1/dt=(-1.0 * r5) + (-1.0 * r13) + ( 1.0 * r14) + (-1.0 * r18)

# Species:   id = R_2, name = R_2, affected by kineticLaw

init R_2=0.0
dR_2/dt=(-1.0 * r6) + (-1.0 * r12) + ( 1.0 * r15) + (-1.0 * r19)

# Species:   id = I_1p, name = I_1p, affected by kineticLaw

init I_1p=0.0
dI_1p/dt=(-1.0 * r7) + ( 1.0 * r12) + (-1.0 * r16)

# Species:   id = I_2p, name = I_2p, affected by kineticLaw

init I_2p=0.0
dI_2p/dt=(-1.0 * r8) + ( 1.0 * r13) + (-1.0 * r17)

# Species:   id = R_p, name = R_p, affected by kineticLaw

init R_p=0.0
dR_p/dt=(-1.0 * r9) + ( 1.0 * r16) + ( 1.0 * r17) + (-1.0 * r20)

@ meth=cvode, tol=1e-6, atol=1e-8
# @ maxstor=1e6
@ bound=40000, total=200
done

