{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A node-link diagram with force-directed layout.",
  "width": 500,
  "height": 500,
  "padding": 0,

  "signals": [
    { "name": "cx", "update": "width / 2" },
    { "name": "cy", "update": "height / 2" },
    { "name": "nodeRadius", "value": 15},
    { "name": "nodeCharge", "value": -80},
    { "name": "linkDistance", "value": 80},
    { "name": "layoutdata", "value": true,
      "bind": {"input": "checkbox"} },
    {
      "description": "State variable for active node fix status.",
      "name": "fix", "value": false,
      "on": [
        {
          "events": "symbol:mouseout[!event.buttons], window:mouseup",
          "update": "false"
        },
        {
          "events": "symbol:mouseover",
          "update": "fix || true"
        },
        {
          "events": "[symbol:mousedown, window:mouseup] > window:mousemove!",
          "update": "xy()",
          "force": true
        }
      ]
    },
    {
      "description": "Graph node most recently interacted with.",
      "name": "node", "value": null,
      "on": [
        {
          "events": "symbol:mouseover",
          "update": "fix === true ? item() : node"
        }
      ]
    },

    {
      "description": "Flag to restart Force simulation upon data changes.",
      "name": "restart", "value": false,
      "on": [
        {"events": {"signal": "fix"}, "update": "fix && fix.length"},
        {"events": {"signal": "layoutdata"}, "update": "true"}
      ]

    }
  ],

  "scales": [
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "node-data", "field": "group"},
      "range": {"scheme": "category20c"}
    },

    {
      "name": "colorlink",
      "type": "ordinal",
      "domain": {"data": "link-data", "field": "group"},
      "range": {"scheme": "category20c"}
    },
    {
      "name": "xscale",
      "domain": {"data": "node-data", "field": "fx"},
      "range": [10, {"signal": "width - 10"}]
    },
    {
      "name": "yscale",
      "domain": {"data": "node-data", "field": "fy"},
      "range": [10, {"signal": "height - 10"}]
    }
  ],

  "legends": [
    {
      "title": "Group",
      "stroke": "color", 
      "symbolType": "stroke"
    },

    {
      "title": "Link Group",
      "stroke": "colorlink", 
      "symbolType": "stroke"
    }
  ],

  "marks": [
    {
      "name": "nodes",
      "type": "symbol",
      "zindex": 1,

      "from": {"data": "node-data"},
      

      "transform": [
        {
          "type": "force",
          "iterations": 300,
          "restart": {"signal": "restart"},
          "static": true,
          "signal": "force",
          "forces": [
            {"force": "center", "x": {"signal": "cx"}, "y": {"signal": "cy"}},
            {"force": "collide", "radius": {"signal": "nodeRadius"}},
            {"force": "nbody", "strength": {"signal": "nodeCharge"}},
            {"force": "link", "links": "link-data",  "distance": {"signal": "linkDistance"}}
          ]
        }
      ],

      "encode": {
        "enter": {
          "fill": {"value": "color", "field": "group"},
          "stroke": {"value": "white"}
          },
        "update": {
          "size": {"signal": "2 * nodeRadius * nodeRadius"},
          "cursor": {"value": "pointer"},
          "fy": {"signal": "node != null && node.datum.id == datum.id && fix.length == 2 ? fix[1] : (layoutdata ? scale('yscale', datum.fy) : null)"},
          "fx": {"signal": "node != null && node.datum.id == datum.id && fix.length == 2 ? fix[0] : (layoutdata ? scale('xscale', datum.fx) : null)"}
        }
      }
    },
    {
      "type": "text",
      "name": "labels",
      "from": {"data": "nodes"},
      "zindex": 2,
      "interactive": false, 
      "transform": [
              {
                "type": "label",
                "avoidMarks": ["nodes"],
                "anchor": ["top", "bottom", "right", "left"],
                "offset": [1],
                "size": {
                    "signal": "[width + 60, height]"
                }
              }
          ],
      "encode": {
        "enter": {
          "fill": {"value": "black"},
          "align": {"value": "center"},
          "baseline": {"value": "middle"},
          "fontSize": {"value": 10},
          "text": {"field": "datum.id"}
        },
        "update": {
          "x": {"field": "x"},
          "y": {"field": "y"}
        }
      }
    },
    {
      "type": "path",
      "from": {"data": "link-data"},
      "interactive": false,
      "encode": {
        "update": {
          "stroke":  {"scale": "colorlink", "field": "group"},
          "strokeWidth": {"value": 0.5}
        }
      },
      "transform": [
        {
          "type": "linkpath",
          "require": {"signal": "force"},
          "shape": "line",
          "sourceX": "datum.source.x", "sourceY": "datum.source.y",
          "targetX": "datum.target.x", "targetY": "datum.target.y"
        }
      ]
    },
    {
      "name":"arrows",
      "type": "symbol",
      "from": {"data": "link-data"},
      "zindex": {"value": 40},
      "encode": {
          "enter": {
              "fill": {"scale": "colorlink", "field": "group"},
              "stroke": {"scale": "colorlink", "field": "group"},
              "shape": {"value": "triangle-right"},
              "size": {"value": 40}
          },
          "update": {
              "x": {"field": "target.x"},
              "y": {"field": "target.y"}
          },
          "hover": {
              "opacity": {"value": 1}
          }
      },
      "transform": [
          {
              "type": "formula",
              "as": "tan",
              "expr": "atan2((datum.datum.target.y-datum.datum.source.y),(datum.datum.target.x-datum.datum.source.x))"
          },
          {
              "type": "formula",
              "as": "angle",
              "expr": "datum.tan*180/PI"
          },
          {
              "type": "formula",
              "as": "y",
              "expr": "datum.datum.target.y - nodeRadius*sin(datum.tan)"
          },
          {
              "type": "formula",
              "as": "x",
              "expr": "datum.datum.target.x - nodeRadius*cos(datum.tan)"
          }  
          ]
      }
  ],

  "data": [
    {
      "name": "node-data",
      "values": [
      {"id": 4, "label": "Zero", "group": "A", "fx": 2, "fy": 5},
      {"id": 1, "label": "One", "group": "A", "fx": 2, "fy": 10},
      {"id": 2, "label": "Two", "group": "B", "fx": 2, "fy": 5},
      {"id": 3, "label": "Three", "group": "B", "fx": 2, "fy": 3},
      {"id": 0, "label": "Four", "group": "C", "fx": 1, "fy": 5},
      {"id": 5, "label": "Five", "group": "C", "fx": 2, "fy": 5},
      {"id": 6, "label": "Six", "group": "C", "fx": 2, "fy": 5}
      ]
    },
    {
      "name": "link-data",
      "values": [
        {"id": 1, "source": 0, "target": 1, "group": "A"},
        {"id": 2, "source": 4, "target": 2, "group": "C"},
        {"id": 3, "source": 3, "target": 0, "group": "A"},
        {"id": 4, "source": 2, "target": 5, "group": "C"},
        {"id": 5, "source": 0, "target": 4, "group": "B"},
        {"id": 6, "source": 5, "target": 0, "group": "B"}
      ]
    }
  ]
}