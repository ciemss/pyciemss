
{
  "$schema": "https://vega.github.io/schema/vega/v5.25.json",
  "description": "A configurable map of countries of the world.",
  "width": 400,
  "height": 400,
  "autosize": "none",

  "signals": [
    
    { "name": "translate0", "update": "width / 2" },
    { "name": "translate1", "update": "height / 2" },
    { "name": "CountryName", "value": "Afghanistan",
      "bind": {"input": "select", "options": [
        "Austria", "Australia", "Antarctica"
      ]}},
    {"name": "IndexSelectedName",
      "on": [{"events": {"signal": "CountryName"}, 
      "update": "indexof(pluck(data('names'),'name'), CountryName)"}]
    },
    { "name": "CountryID",
    "on": [{"events": {"signal": "IndexSelectedName"}, 
      "update": "pluck(data('names'),'country-code')[IndexSelectedName]" }]},

    { "name": "IndexSelectedGeometry", 
    "on": [{"events": {"signal": "CountryID"}, 
      "update": "indexof(pluck(data('world'),'id'), CountryID)" }]},

    { "name": "SelectedGeometry", 
    "on": [{"events": {"signal": "CountryID"}, 
      "update": "pluck(data('world'),'geometry')[IndexSelectedGeometry]" }]},

    { "name": "centroid_country_px", 
    "on": [{"events": {"signal": "SelectedGeometry"}, 
      "update": "geoCentroid('projection_original', SelectedGeometry)"}]},

    { "name": "centroid_country_degree", 
    "on": [{"events": {"signal": "centroid_country_px"}, 
      "update": "invert('projection_original', centroid_country_px)"}]},

    { "name": "bounds_country_px", 
    "on": [{"events": {"signal": "centroid_country_degree"}, 
      "update": "geoBounds('projection_original', SelectedGeometry)"}]},

    { "name": "country_scale_px", 
    "on": [{"events": {"signal": "bounds_country_px"}, 
      "update": "max(bounds_country_px[1][0] - bounds_country_px[0][0], bounds_country_px[1][1] - bounds_country_px[0][1])"}]},

    { "name": "country_width_degrees", 
    "on": [{"events": {"signal": "country_scale_px"}, 
      "update": "invert('projection_original', [country_scale_px + scale('projection_original', [-180, 0])[0], 0])[0] + 180"}]},

    { "name": "orig_scale", 
    "on": [{"events": {"signal": "SelectedGeometry"}, 
      "update": "geoScale('projection_original')"}]},

    { "name": "degree_width_pixels", 
    "on": [{"events": {"signal": "CountryID"}, 
      "update": "scale('projection_original', [-180 + longitude_width, 0])[0]- scale('projection_original', [-180, 0])[0]"}]},
    
    { "name": "manual_width_ratio", 
    "on": [{"events": {"signal": "degree_width_pixels"}, 
      "update": "width/degree_width_pixels"}]},
    
    { "name": "manual_scale", 
    "on": [{"events": {"signal": "manual_width_ratio"}, 
      "update": "orig_scale*manual_width_ratio"}]},


    { "name": "longitude", 
    "value": 0,    
    "on": [
      {"events": {"signal": "centroid_country_degree"}, "update": "centroid_country_degree[0]"}],
      "bind": {"input": "range", "min": -180, "max": 180, "step": 1}},

    { "name": "latitude", 
    "value": 0,    
    "on": [
      {"events": {"signal": "centroid_country_degree"}, "update": "centroid_country_degree[1]"}],
      "bind": {"input": "range", "min": -90, "max": 90, "step": 1}},

    { "name": "longitude_width", 
    "on": [
      {"events": {"signal": "country_width_degrees"}, "update": "country_width_degrees"}],
    "value": 360,
      "bind": {"input": "range", "min": 1, "max": 360, "step": 1}},

    { "name": "scale_projection", 
    "value": 63.66,
    "on": [
      {"events": {"signal": "longitude_width"}, 
    "update": "geoScale('projection_original')*width/(scale('projection_original', [-180 + longitude_width, 0])[0]- scale('projection_original', [-180, 0])[0])"}]},

    {
      "name": "SelectedName",
      "on": [{"events": {"signal": "CountryName"}, 
      "update": "indexof(pluck(data('names'),'name'), CountryName)"}]
    },

  ],
  "projections": [
    {
      "name": "projection_updated",
      "scale": {"signal": "scale_projection"},
      "center": [
        {"signal": "longitude"},
        {"signal": "latitude"}
      ],
      "translate": [
        {"signal": "translate0"},
        {"signal": "translate1"}
      ]
    },
    {
      "name": "projection_original",
      "translate": [
        {"signal": "translate0"},
        {"signal": "translate1"}
      ]
    }
  ],

  "scales": [
    {
      "name": "color",
      "type": "linear",
      "domain": {"data": "mesh", "field": "__count"},
      "range": "heatmap",
      "interpolate": "hcl",
      "zero": true
    }
  ],
  "data": [

    {
      "name": "mesh",
      "values": [
        {"x_start":0,"x_end":50,"y_start":0, "y_end": 50, "__count":10},
        {"x_start":50,"x_end":60,"y_start":50, "y_end": 70, "__count":3000}
        ]
    },
    {
      "name": "world",
      "url": "data/world-110m.json",
      "format": {
        "type": "topojson",
        "feature": "countries"
      }
    },

        {
      "name": "names",
      "url": "https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv",
      "format": {"type": "csv",
      "parse": {"country-code": "number"}}
    },
    
    {
      "name": "graticule",
      "transform": [
        { "type": "graticule", "stepMinor": [10, 10] }
      ]
    }
  ],

  "marks": [
        {
      "name": "marks",
      "type": "rect",
      "style": ["rect"],
      "from": {"data": "mesh"},
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "__count"},
          "x2": {
            "signal": "scale('projection_updated', [datum.x_start, datum.y_start])[0]"
          },
          "x": {
            "signal": "scale('projection_updated', [datum.x_end, datum.y_end])[0]"
          },
          "y2": {
            "signal": "scale('projection_updated', [datum.x_start, datum.y_start])[1]"
          },
          "y": {
            "signal": "scale('projection_updated', [datum.x_end, datum.y_end])[1]"
          }
        }
      }
    },
    {
      "type": "shape",
      "from": {"data": "graticule"},
      "encode": {
        "update": {
          "strokeWidth": {"value": 1},
          "strokeDash": "[+1, +1]",
          "stroke": "#444",
          "fill": {"value": null}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection_updated" }
      ]
    },
    {
      "type": "shape",
      "from": {"data": "world"},
      "encode": {
        "update": {
          "strokeWidth": 1,
    "opacity": [{"test": "datum['id'] == CountryID", "value": 1.0}, {"value": 0.2}],
          "zindex": {"value": 0}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection_updated" }
      ]
    },
    {
      "type": "shape",
      "from": {"data": "graticule"},
      "encode": {
        "update": {
          "strokeWidth": {"value": 1},
          "strokeDash": {"value": 1},
          "stroke": {"value": "#444"},
          "fill": {"value": null}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection_updated" }
      ]
    }
  ]
}