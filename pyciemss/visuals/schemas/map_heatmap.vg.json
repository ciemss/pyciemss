
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "A configurable map of countries of the world.",
  "width": 400,
  "height": 200,
  "autosize": "none",

  "signals": [
    
    { "name": "translate0", "update": "width / 2" },
    { "name": "translate1", "update": "height / 2" },
    { "name": "zoom_by_country", 
      "bind": {"input": "checkbox"}},
    { "name": "CountryID", "value": 4,
      "update": "pluck(data('SelectedName'),'country-code')[0]" },

    { "name": "CountryName", "value": "Afghanistan",
      "bind": {"input": "select", "options": [
        "Austria", "Australia", "Antarctica"
      ]}},

    { "name": "longitude", 
    "value": 0,    
    "on": [
      {"events": {"signal": "zoom_by_country"}, "update": "zoom_by_country?pluck(data('SelectedGeometry'),'centroid_country_degree')[0][0]: longitude"}],
      "bind": {"input": "range", "min": -180, "max": 180, "step": 1}},

    { "name": "center_x", 
    "update": "zoom_by_country? pluck(data('SelectedGeometry'),'centroid_country_degree')[0][0] : longitude"},

    { "name": "latitude", 
    "value": 0,    
    "on": [
      {"events": {"signal": "zoom_by_country"}, "update": "zoom_by_country?pluck(data('SelectedGeometry'),'centroid_country_degree')[0][1]: latitude"}],
      "bind": {"input": "range", "min": -90, "max": 90, "step": 1}},

    { "name": "center_y", 
    "value":0,
    "update": "zoom_by_country? pluck(data('SelectedGeometry'),'centroid_country_degree')[0][1] : latitude"},  

    { "name": "longitude_width", 
    "value": 360,
      "bind": {"input": "range", "min": 1, "max": 360, "step": 1}},

    { "name": "scale_projection", 
    "value":50,
    "update": "zoom_by_country? pluck(data('SelectedGeometry'),'scale_country')[0]: pluck(data('SelectedGeometry'),'manual_scale')[0]"},

    {
      "name": "opacity", "value": 0.5
    },
    {
      "name": "levels", "value": 6
    },
    {
      "name": "stop", "value": 3000
    },
    {
      "name": "step",
      "update": "stop / levels"
    },
  { "description": "Active datapoint",
    "name": "activated_datapoint", "value": null,
    "on": [
      {
        "events": "mouseover",
        "update": "item()"
      },
      {
        "events": "mouseout",
        "update": "null"
      }
    ]
  }

  ],
  "projections": [
    {
      "name": "projection_updated",
      "scale": {"signal": "scale_projection"},
      "center": [
        {"signal": "center_x"},
        {"signal": "center_y"}
      ],
      "translate": [
        {"signal": "translate0"},
        {"signal": "translate1"}
      ]
    },
    {
      "name": "projection_original",
      "translate": [
        {"signal": "translate0"},
        {"signal": "translate1"}
      ]
    }
  ],


  "scales": [
    {
      "name": "color",
      "type": "quantize",
      "domain": {"signal": "[0, stop]"},
      "range": {"scheme": "bluepurple", "count": {"signal": "levels"}}
    }
  ],
  "data": [
        {
      "name": "precipitation",
      "url": "data/annual-precip.json"
    },
    {
      "name": "contours",
      "source": "precipitation",
      "transform": [
        {
          "type": "isocontour",
          "thresholds": {"signal": "sequence(step, stop, step)"}
        }
      ]
    },
    {
      "name": "world",
      "url": "data/world-110m.json",
      "format": {
        "type": "topojson",
        "feature": "countries"
      }
    },

        {
      "name": "names",
      "url": "https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv",
      "format": {"type": "csv",
      "parse": {"country-code": "number"}}
    },
        {
      "name": "SelectedName",
      "source": "names",
      "format": {"type": "csv",
      "parse": {"country-code": "number"}},
      "transform": [
      {"type": "filter", "expr": "datum['name'] == CountryName"}]
    },
    {
      "name": "SelectedGeometry",
      "source": "world",
      "transform": 
        [
        { "type": "filter", "expr": "datum['id'] == CountryID" },
        {
          "type": "formula",
          "expr": "geoCentroid('projection_original', datum)",
          "as": "centroid_country_px"
        },
        {
          "type": "formula",
          "expr": "geoBounds('projection_original', datum)",
          "as": "bounds_country_px"
        },
        {
          "type": "formula",
          "expr": "width/(datum.bounds_country_px[1][0] - datum.bounds_country_px[0][0])",
          "as": "country_width_ratio"
        },
        {
          "type": "formula",
          "expr": "height/(datum.bounds_country_px[1][1] - datum.bounds_country_px[0][1])",
          "as": "country_height_ratio"
        },
        {
          "type": "formula",
          "expr": "geoScale('projection_original')",
          "as": "orig_scale"
        },
        {
          "type": "formula",
          "expr": "max(datum.orig_scale*datum.country_width_ratio, datum.orig_scale*datum.country_height_ratio)",
          "as": "scale_country"
        },
        {
          "type": "formula",
          "expr": "invert('projection_original', datum.centroid_country_px)",
          "as": "centroid_country_degree"
        },
        {
          "type": "formula",
          "expr": "scale('projection_original', [-180 + longitude_width, 0])[0]- scale('projection_original', [-180, 0])[0]",
          "as": "degree_width_pixels"
        },
        {
          "type": "formula",
          "expr": "width/datum.degree_width_pixels",
          "as": "manual_width_ratio"
        },
        {
          "type": "formula",
          "expr": "datum.orig_scale*datum.manual_width_ratio",
          "as": "manual_scale"
        }
      ]
    },
    
    {
      "name": "graticule",
      "transform": [
        { "type": "graticule", "stepMinor": [10, 10] }
      ]
    }
  ],

  "marks": [
    {
      "type": "shape",
      "from": {"data": "graticule"},
      "encode": {
        "update": {
          "strokeWidth": {"value": 1},
          "strokeDash": "[+1, +1]",
          "stroke": "#444",
          "fill": {"value": null}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection_updated" }
      ]
    },
    {
      "type": "shape",
      "from": {"data": "world"},
      "encode": {
        "update": {
          "strokeWidth": 1,
    "opacity": [{"test": "datum['id'] == CountryID", "value": 1.0}, {"value": 0.2}],
          "zindex": {"value": 0}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection_updated" }
      ]
    },
    {
      "type": "shape",
      "clip": true,
      "from": { "data": "contours"},
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "contour.value"},
          "fillOpacity": {"signal": "opacity"}
        }
      },
      "transform": [
        {
          "type": "geoshape",
          "field": "datum.contour",
          "projection": "projection_updated"
        }
      ]
    },
    {
      "type": "shape",
      "from": {"data": "graticule"},
      "encode": {
        "update": {
          "strokeWidth": {"value": 1},
          "strokeDash": {"value": 1},
          "stroke": {"value": "#444"},
          "fill": {"value": null}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection_updated" }
      ]
    }
  ]
}